name: Build

on:
  push:
    branches: [ "latest" ]
  pull_request:
    branches: [ "latest" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-
    - name: Build
      run: cargo build --release
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rfdns-binary
        path: target/release/rfdns
    - name: Get commit hash
      id: vars
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.vars.outputs.sha }}
        release_name: Release ${{ steps.vars.outputs.sha }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/release/rfdns
        asset_name: rfdns
        asset_content_type: application/octet-stream
